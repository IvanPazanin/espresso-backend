{"version":3,"sources":["components/Touchable/touchable.module.scss","components/Layout/Body/body.module.scss","views/Main/main.module.scss","components/Article/article.module.scss","configuration/Settings sync /^/.//.*$","components/Navbar/Navbar.tsx","components/Touchable/index.ts","components/Touchable/Touchable.tsx","components/Icons/ArrowRight.tsx","components/Navbar/index.ts","components/Layout/Body/index.ts","components/Layout/Body/Body.tsx","graphql/queries/get_featured_articles.ts","graphql/queries/get_latest_articles.ts","components/Article/Article.tsx","components/Article/index.ts","components/Loader/Loader.tsx","components/Loader/index.ts","views/Main/partials/FeaturedArticles/index.ts","views/Main/partials/FeaturedArticles/FeaturedArticles.tsx","views/Main/partials/LatestArticles/index.ts","views/Main/partials/LatestArticles/LatestArticles.tsx","views/Main/index.ts","views/Main/Main.tsx","graphql/queries/get_configuration.ts","configuration/environment.ts","containers/AppContainer.tsx","routers/AppRouter.tsx","configuration/configuration.ts","configuration/configuration.builder.ts","configuration/apollo-client.ts","styles/Palette.ts","components/App/App.tsx","components/App/index.ts","serviceWorker.ts","index.tsx","components/Navbar/navbar.module.scss","components/Loader/loader.module.scss","views/Main/partials/LatestArticles/latest_articles.module.scss","views/Main/partials/FeaturedArticles/featured_articles.module.scss"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","NavArrowActions","Touchable","onClick","children","className","type","props","handleClick","React","useCallback","cx","styles","container","ArrowRight","xmlns","xmlnsXlink","width","height","viewBox","version","stroke","strokeWidth","fill","fillRule","transform","d","findNextRoute","currentRoute","action","allRoutes","currentIndex","findIndex","route","BACKWARDS","length","FORWARDS","Navbar","categories","routes","history","useHistory","location","useLocation","useParams","path","pushToNextRoute","nextRoute","push","handleArrowClick","currentTarget","dataset","useEffect","handleKeydown","key","window","addEventListener","removeEventListener","handleGoToHomeClick","preventDefault","pathname","handleNavItemClick","url","justifyContent","alignItems","fluid","to","logoLink","src","alt","logo","items","href","index","category","data-url","isActive","activeClassName","navItem__active","navItem","navItemText","navItem__activeText","weight","size","name","arrowsWrapper","disabled","arrowBtn","arrowLeft","data-action","Body","flexDirection","writeQuery","useRest","gql","GET_FEATURED_ARTICLES","rest","GET_LATEST_ARTICLES","WrapperLink","wrapperLink","target","rel","Article","Featured","article","variant","imageUrl","title","newsPortal","publishDateTime","featuredMain","fallbackSrc","coverImage","align","substring","trim","iconUrl","newsPortalIcon","moment","fromNow","featuredRegular","coverImageWrapper","newsPortalWrapper","color","style","backgroundImage","disableStyles","Latest","latest","textWrapper","LoadingSpinner","memo","loadingSpinner","circle","strokeLinecap","cy","r","Loader","useFullLifecyle","document","body","overflow","removeProperty","loader","spinner","text","FeaturedArticles","articles","loading","mainArticle","restOfArticles","subtitle","flexOut","list","flexWrap","LatestArticles","onRefetch","refetching","hasCrossedThreshold","useRef","useWindowDimensions","useMemo","listHeight","LIST_HEIGHT","VISIBLE_LIST_ITEM_COUNT","Math","floor","handleListScroll","a","scrollTop","scrollHeight","LIST_ITEM_HEIGHT","current","onScroll","listWrapper","Main","newsPortalIds","skipLatestArticles","useState","latestArticles","setLatestArticles","categoryId","undefined","faResult","useQuery","variables","categoryIds","join","laResult","take","skip","onCompleted","result","prevArticles","handleRefetch","refetch","data","featuredArticles","networkStatus","NetworkStatus","Environment","GET_CONFIGURATION","AppContainer","loadingConfiguration","config","filteredCategories","allCategories","filter","filterCategories","webConfiguration","replace","currentRouteIndex","getCurrentCategory","currentCategory","useDocumentTitle","includes","onRouteChange","AppRouter","exact","component","Configuration","appSettings","appSettingsEnvironment","environment","settings","this","forEach","defineProperty","value","property","prototype","hasOwnProperty","call","ConfigurationBuilder","configuration","buildConfiguration","process","REACT_APP_ENVIRONMENT","appSettingsEnvironmentFileName","getAppSettingsFileName","require","values","getConfiguration","headers","getProperty","apiBaseUrl","restLink","RestLink","credentials","uri","httpLink","HttpLink","cache","InMemoryCache","client","ApolloClient","link","ApolloLink","from","Palette","locale","App","hexToRgba","useStringHelpers","apolloClient","colors","primary","secondary","white","black","muted","error","success","Boolean","hostname","match","Axios","defaults","baseURL","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.20cead8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"touchable_container__29tNB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"body_container__1VOCi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"main_container__2sVsS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperLink\":\"article_wrapperLink__3zsS1\",\"featuredMain\":\"article_featuredMain__1f0SL\",\"latest\":\"article_latest__31GPf\",\"coverImage\":\"article_coverImage__dFzId\",\"title\":\"article_title__i7kUj\",\"featuredRegular\":\"article_featuredRegular__2DAgt\",\"coverImageWrapper\":\"article_coverImageWrapper__2sYf_\",\"newsPortalWrapper\":\"article_newsPortalWrapper__1uNEP\",\"newsPortalIcon\":\"article_newsPortalIcon__eeodb\",\"textWrapper\":\"article_textWrapper__DPUyl\"};","var map = {\n\t\"./settings\": 54,\n\t\"./settings.development\": 112,\n\t\"./settings.development.json\": 112,\n\t\"./settings.json\": 54,\n\t\"./settings.local\": 113,\n\t\"./settings.local.json\": 113,\n\t\"./settings.production\": 114,\n\t\"./settings.production.json\": 114,\n\t\"./settings.test\": 115,\n\t\"./settings.test.json\": 115\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 191;","/* eslint-disable sort-keys */\nimport React from 'react';\nimport Touchable from 'components/Touchable';\nimport cx from 'classnames';\n\nimport { Flex, Text } from '@profico/react-ui-components';\nimport {\n  NavLink,\n  useParams,\n  useHistory,\n  Link,\n  useLocation,\n} from 'react-router-dom';\nimport { ArrowRight } from 'components/Icons';\nimport { GetWebConfigurationCategory } from 'models';\n\nimport styles from './navbar.module.scss';\n\ninterface NavbarProps {\n  categories: GetWebConfigurationCategory[];\n  routes: string[];\n  onRouteChange: (nextRoute: string) => void;\n}\n\nenum NavArrowActions {\n  FORWARDS = 'FORWARDS',\n  BACKWARDS = 'BACKWARDS',\n}\n\nconst findNextRoute = (\n  currentRoute: string,\n  action: NavArrowActions,\n  allRoutes: string[]\n): string | null => {\n  const currentIndex = allRoutes.findIndex(route => route === currentRoute);\n\n  if (currentIndex === -1) {\n    return null;\n  }\n\n  if (\n    (currentIndex === 0 && action === NavArrowActions.BACKWARDS) ||\n    (currentIndex === allRoutes.length - 1 &&\n      action === NavArrowActions.FORWARDS)\n  ) {\n    return null;\n  }\n\n  const nextIndex =\n    action === NavArrowActions.BACKWARDS ? currentIndex - 1 : currentIndex + 1;\n  const nextRoute = allRoutes[nextIndex];\n\n  return nextRoute;\n};\n\nconst Navbar: React.FC<NavbarProps> = ({ categories, routes }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const { path = '' } = useParams<{ path: string }>();\n\n  const pushToNextRoute = React.useCallback(\n    (nextRoute: string) => {\n      history.push(nextRoute);\n    },\n    [history]\n  );\n\n  const handleArrowClick = (e: React.MouseEvent<SVGSVGElement>) => {\n    const {\n      currentTarget: {\n        dataset: { action },\n      },\n    } = e;\n\n    if (!action) {\n      return;\n    }\n\n    const nextRoute = findNextRoute(path, action as NavArrowActions, routes);\n\n    if (nextRoute === null) {\n      return;\n    }\n\n    pushToNextRoute(nextRoute);\n  };\n\n  React.useEffect(() => {\n    const handleKeydown = (e: KeyboardEvent) => {\n      const { key } = e;\n\n      if (key === 'ArrowLeft' || key === 'ArrowRight') {\n        const nextRoute = findNextRoute(\n          path,\n          key === 'ArrowLeft'\n            ? NavArrowActions.BACKWARDS\n            : NavArrowActions.FORWARDS,\n          routes\n        );\n\n        if (nextRoute === null) {\n          return;\n        }\n\n        pushToNextRoute(nextRoute);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [history, path, routes, pushToNextRoute]);\n\n  const handleGoToHomeClick = React.useCallback(\n    (e: React.MouseEvent<HTMLAnchorElement>) => {\n      e.preventDefault();\n\n      if (location.pathname !== '/') {\n        // history.push('/');\n        pushToNextRoute('/');\n      }\n    },\n    [location.pathname, pushToNextRoute]\n  );\n\n  const handleNavItemClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n\n    const {\n      currentTarget: {\n        dataset: { url },\n      },\n    } = e;\n\n    // Empty string is a valid option, that's why we can't have a simple check like `if (!url) {...}`\n    if (typeof url !== 'undefined') {\n      pushToNextRoute(url);\n    }\n  };\n\n  return (\n    <Flex\n      className={styles.container}\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      fluid\n    >\n      <Link to=\"/\" className={styles.logoLink} onClick={handleGoToHomeClick}>\n        <img src=\"/logo512.png\" alt=\"Espresso logo\" className={styles.logo} />\n      </Link>\n      <Flex className={styles.items}>\n        {routes.map((href, index) => {\n          const category = categories[index];\n\n          return (\n            <NavLink\n              key={category.id}\n              to={href}\n              data-url={href}\n              isActive={() => path === href}\n              activeClassName={styles.navItem__active}\n              className={styles.navItem}\n              onClick={handleNavItemClick}\n            >\n              <Text\n                className={cx(styles.navItemText, {\n                  [styles.navItem__activeText]: path === href,\n                })}\n                weight=\"semibold\"\n                size=\"caption\"\n              >\n                {category.name}\n              </Text>\n            </NavLink>\n          );\n        })}\n      </Flex>\n      <Flex className={styles.arrowsWrapper}>\n        <Touchable disabled={path === ''} className={styles.arrowBtn}>\n          <ArrowRight\n            className={styles.arrowLeft}\n            data-action={NavArrowActions.BACKWARDS}\n            onClick={handleArrowClick}\n          />\n        </Touchable>\n        <Touchable\n          disabled={path === routes[routes.length - 1]}\n          className={styles.arrowBtn}\n        >\n          <ArrowRight\n            data-action={NavArrowActions.FORWARDS}\n            onClick={handleArrowClick}\n          />\n        </Touchable>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Navbar;\n","import Touchable from './Touchable';\n\nexport default Touchable;\n","import React from 'react';\nimport cx from 'classnames';\n\nimport styles from './touchable.module.scss';\n\ntype ButtonProps = React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\nconst Touchable: React.FC<ButtonProps> = ({\n  onClick,\n  children,\n  className,\n  type = 'button',\n  ...props\n}) => {\n  const handleClick = React.useCallback(\n    (e: React.MouseEvent<HTMLButtonElement>) => {\n      if (onClick) {\n        onClick(e);\n      }\n    },\n    [onClick]\n  );\n\n  return (\n    <button\n      onClick={handleClick}\n      type={type}\n      className={cx(styles.container, className)}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Touchable;\n","import React from 'react';\n\nconst ArrowRight: React.FC<React.SVGProps<SVGSVGElement>> = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    width=\"25px\"\n    height=\"25px\"\n    viewBox=\"0 0 25 25\"\n    version=\"1.1\"\n    {...props}\n  >\n    <title>3BA9149F-222F-43D4-9E44-836E9369ABC0</title>\n    <g id=\"Web\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g\n        id=\"Artboard-Copy-4\"\n        transform=\"translate(-1396.000000, -21.000000)\"\n        fill=\"#000000\"\n        fillRule=\"nonzero\"\n      >\n        <g\n          id=\"Budicon-Outline/Arrows/arrow-right\"\n          transform=\"translate(1396.000000, 21.000000)\"\n        >\n          <path\n            d=\"M23,12.493856 C23,12.6264885 22.9474242,12.7537096 22.8535,12.847356 L15.8535,19.847356 C15.6573106,20.0368421 15.3454576,20.0341322 15.1525907,19.8412653 C14.9597238,19.6483984 14.9570139,19.3365455 15.1465,19.140356 L21.293,12.993856 L1.5,12.993856 C1.22385763,12.993856 1,12.7699984 1,12.493856 C1,12.2177136 1.22385763,11.993856 1.5,11.993856 L21.293,11.993856 L15.1465,5.84735601 C14.9570139,5.65116657 14.9597238,5.33931362 15.1525907,5.14644672 C15.3454576,4.95357982 15.6573106,4.95086991 15.8535,5.14035601 L22.8535,12.140356 C22.9474242,12.2340024 23,12.3612235 23,12.493856 Z\"\n            id=\"Shape\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default ArrowRight;\n","import Navbar from './Navbar';\n\nexport default Navbar;\n","import Body from './Body';\n\nexport default Body;\n","import React from 'react';\n\nimport { Flex } from '@profico/react-ui-components';\n\nimport styles from './body.module.scss';\n\nconst Body: React.FC = ({ children }) => (\n  <Flex flexDirection=\"column\" className={styles.container}>\n    {children}\n  </Flex>\n);\n\nexport default Body;\n","import { gql } from '@apollo/client';\nimport { MultiApiQuery, PaginationOptions } from 'graphql/types';\n\nconst writeQuery = (useRest: boolean) => gql`\n  query GET_FEATURED_ARTICLES($take: Int = 10, $skip: Int = 0, $minTimestamp: String = \"\", $newsPortalIds: String = \"\", $categoryIds: String = \"\") {\n    featuredArticles(\n        take: $take,\n        skip: $skip,\n        minTimestamp: $minTimestamp,\n        newsPortalIds: $newsPortalIds,\n        categoryIds: $categoryIds,\n    ) ${\n      useRest\n        ? '@rest(type: \"GetFeaturedArticlesQueryResponse\", path: \"/articles/featured?take={args.take}&skip={args.skip}&minTimestamp={args.minTimestamp}&newsPortalIds={args.newsPortalIds}&categoryIds={args.categoryIds}\")'\n        : ''\n    } {\n      articles {\n        id\n        url\n        title\n        imageUrl\n        publishDateTime\n        newsPortal {\n          name\n          iconUrl\n        }\n        categories {\n          id\n          name\n          color\n        }\n      }\n    }\n  }\n`;\n\nexport interface GetFeaturedArticlesQueryArgs extends PaginationOptions {\n  minTimestamp?: string;\n  newsPortalIds?: string;\n  categoryIds?: string;\n}\n\nexport const GET_FEATURED_ARTICLES: MultiApiQuery = {\n  gql: writeQuery(false),\n  rest: writeQuery(true),\n};\n","import { gql } from '@apollo/client';\nimport { MultiApiQuery, PaginationOptions } from 'graphql/types';\n\nconst writeQuery = (useRest: boolean) => gql`\n  query GET_LATEST_ARTICLES($take: Int = 5, $skip: Int = 0, $minTimestamp: String = \"\", $newsPortalIds: String = \"\", $categoryIds: String = \"\", $titleSearchQuery: String = \"\") {\n    latestArticles(\n      take: $take,\n      skip: $skip,\n      minTimestamp: $minTimestamp,\n      newsPortalIds: $newsPortalIds,\n      categoryIds: $categoryIds,\n      titleSearchQuery: $titleSearchQuery\n    ) ${\n      useRest\n        ? '@rest(type: \"GetLatestArticlesQueryResponse\", path: \"/articles?take={args.take}&skip={args.skip}&minTimestamp={args.minTimestamp}&newsPortalIds={args.newsPortalIds}&categoryIds={args.categoryIds}\")'\n        : ''\n    } {\n      articles {\n        id\n        url\n        title\n        imageUrl\n        publishDateTime\n        newsPortal {\n          name\n          iconUrl\n        }\n        categories {\n          id\n          name\n          color\n        }\n      }\n    }\n  }\n`;\n\nexport interface GetLatestArticlesQueryArgs extends PaginationOptions {\n  minTimestamp?: string;\n  newsPortalIds?: string;\n  categoryIds?: string;\n  titleSearchQuery?: string;\n}\n\nexport const GET_LATEST_ARTICLES: MultiApiQuery = {\n  gql: writeQuery(false),\n  rest: writeQuery(true),\n};\n","import React from 'react';\nimport moment from 'moment';\nimport cx from 'classnames';\n\nimport { Flex, Text, Image } from '@profico/react-ui-components';\nimport { GetLatestArticlesArticle, GetFeaturedArticlesArticle } from 'models';\n\nimport styles from './article.module.scss';\n\ntype AnchorElementProps = React.DetailedHTMLProps<\n  React.HTMLProps<HTMLAnchorElement>,\n  HTMLAnchorElement\n>;\ninterface LatestArticleProps extends AnchorElementProps {\n  article: GetLatestArticlesArticle;\n}\ninterface FeaturedArticleProps extends AnchorElementProps {\n  article: GetFeaturedArticlesArticle;\n  variant: 'main' | 'regular';\n}\n\nconst WrapperLink: React.FC<{ href: string; className?: string }> = ({\n  href,\n  className,\n  children,\n}) => (\n  <a\n    href={href}\n    className={cx(styles.wrapperLink, className)}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    {children}\n  </a>\n);\n\nconst Featured: React.FC<FeaturedArticleProps> = ({\n  article,\n  className,\n  variant,\n  ...props\n}) => {\n  const { url, imageUrl, title, newsPortal, publishDateTime } = article;\n\n  if (variant === 'main') {\n    return (\n      <WrapperLink\n        {...props}\n        href={url}\n        className={cx(styles.featuredMain, className)}\n      >\n        <Image\n          src={imageUrl || '/assets/images/logo.png'}\n          fallbackSrc=\"/assets/images/logo.png\"\n          className={styles.coverImage}\n        />\n        <Flex flexDirection=\"column\">\n          <Text\n            title={title}\n            className={styles.title}\n            weight=\"bold\"\n            align=\"left\"\n            size=\"h1\"\n          >\n            {title.length > 120\n              ? `${title.substring(0, 120).trim()}...`\n              : title}\n          </Text>\n          <Flex alignItems=\"center\">\n            <Image\n              src={newsPortal.iconUrl || '/assets/images/logo.png'}\n              fallbackSrc=\"/assets/images/logo.png\"\n              className={styles.newsPortalIcon}\n            />\n            <Text size=\"caption\">\n              {`${newsPortal.name} • ${moment(publishDateTime).fromNow()}`}\n            </Text>\n          </Flex>\n        </Flex>\n      </WrapperLink>\n    );\n  }\n\n  return (\n    <WrapperLink\n      {...props}\n      href={url}\n      className={cx(styles.featuredRegular, className)}\n    >\n      <Flex className={styles.coverImageWrapper}>\n        <Flex className={styles.newsPortalWrapper} alignItems=\"center\">\n          <Image\n            src={newsPortal.iconUrl || '/assets/images/logo.png'}\n            fallbackSrc=\"/assets/images/logo.png\"\n            className={styles.newsPortalIcon}\n          />\n          <Text size=\"small\" color=\"white\">\n            {newsPortal.name}\n          </Text>\n        </Flex>\n        <Flex\n          className={styles.coverImage}\n          style={{\n            backgroundImage: `url(${imageUrl || '/assets/images/logo.png'})`,\n          }}\n          disableStyles\n        />\n      </Flex>\n      <Text title={title} weight=\"bold\" align=\"left\">\n        {title.length > 80 ? `${title.substring(0, 80).trim()}...` : title}\n      </Text>\n    </WrapperLink>\n  );\n};\n\nconst Latest: React.FC<LatestArticleProps> = ({\n  article: { url, imageUrl, title, newsPortal, publishDateTime },\n  className,\n  ...props\n}) => (\n  <WrapperLink {...props} href={url} className={cx(styles.latest, className)}>\n    <Image\n      src={imageUrl || '/assets/images/logo.png'}\n      fallbackSrc=\"/assets/images/logo.png\"\n      className={styles.coverImage}\n    />\n    <Flex flexDirection=\"column\" className={styles.textWrapper}>\n      <Text title={title} className={styles.title} weight=\"bold\" align=\"left\">\n        {title.length > 80 ? `${title.substring(0, 80).trim()}...` : title}\n      </Text>\n      <Text size=\"caption\" align=\"left\">\n        {`${newsPortal.name} • ${moment(publishDateTime).fromNow()}`}\n      </Text>\n    </Flex>\n  </WrapperLink>\n);\n\nexport default {\n  Featured,\n  Latest,\n};\n","import Article from './Article';\n\nexport default Article;\n","import React from 'react';\nimport cx from 'classnames';\n\nimport { Flex, Text } from '@profico/react-ui-components';\nimport { useFullLifecyle } from '@profico/react-utils';\n\nimport styles from './loader.module.scss';\n\ninterface LoadingSpinnerProps\n  extends React.DetailedHTMLProps<\n    React.SVGProps<SVGSVGElement>,\n    SVGSVGElement\n  > {\n  size?: number;\n}\n\nexport const LoadingSpinner: React.FC<LoadingSpinnerProps> = React.memo(\n  ({ className, size = 48, ...props }) => (\n    <svg\n      className={cx(styles.loadingSpinner, className)}\n      width={`${size}px`}\n      height={`${size}px`}\n      viewBox=\"0 0 66 66\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <circle\n        className={styles.circle}\n        fill=\"none\"\n        strokeWidth=\"6\"\n        strokeLinecap=\"round\"\n        cx=\"33\"\n        cy=\"33\"\n        r=\"30\"\n      />\n    </svg>\n  )\n);\n\nconst Loader: React.FC = () => {\n  useFullLifecyle(\n    () => {\n      document.body.style.overflow = 'hidden';\n    },\n    () => {\n      document.body.style.removeProperty('overflow');\n    }\n  );\n\n  return (\n    <Flex\n      className={styles.loader}\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <LoadingSpinner className={styles.spinner} />\n      <Text className={styles.text} align=\"center\" weight=\"semibold\" size=\"h3\">\n        Učitavanje...\n      </Text>\n    </Flex>\n  );\n};\n\nexport default React.memo(Loader);\n","import Loader from './Loader';\n\nexport * from './Loader';\nexport default Loader;\n","import FeaturedArticles from './FeaturedArticles';\n\nexport default FeaturedArticles;\n","import React from 'react';\nimport Article from 'components/Article';\n\nimport { Flex, Text } from '@profico/react-ui-components';\nimport { GetFeaturedArticlesArticle } from 'models';\nimport { LoadingSpinner } from 'components/Loader';\n\nimport styles from './featured_articles.module.scss';\n\ninterface FeaturedArticlesProps {\n  articles: GetFeaturedArticlesArticle[];\n  loading: boolean;\n}\n\nconst FeaturedArticles: React.FC<FeaturedArticlesProps> = ({\n  articles,\n  loading,\n}) => {\n  const [mainArticle, ...restOfArticles] = articles;\n\n  return (\n    <Flex className={styles.container} flexDirection=\"column\" fluid>\n      <Text\n        weight=\"bold\"\n        align=\"left\"\n        color=\"muted\"\n        size=\"caption\"\n        transform=\"uppercase\"\n        className={styles.subtitle}\n      >\n        Izdvojeno\n      </Text>\n      {loading ? (\n        <Flex flexOut>\n          <LoadingSpinner size={24} />\n        </Flex>\n      ) : (\n        <Flex flexDirection=\"column\">\n          {mainArticle && (\n            <Article.Featured\n              className={styles.mainArticle}\n              article={mainArticle}\n              variant=\"main\"\n            />\n          )}\n          <Flex\n            className={styles.list}\n            justifyContent=\"space-between\"\n            flexWrap=\"wrap\"\n          >\n            {restOfArticles.map(article => (\n              <Article.Featured\n                key={article.id}\n                article={article}\n                variant=\"regular\"\n              />\n            ))}\n          </Flex>\n        </Flex>\n      )}\n    </Flex>\n  );\n};\n\nexport default FeaturedArticles;\n","import LatestArticles from './LatestArticles';\n\nexport default LatestArticles;\n","import React from 'react';\n\nimport { LoadingSpinner } from 'components/Loader';\nimport { GetLatestArticlesArticle } from 'models';\nimport { Flex, Text } from '@profico/react-ui-components';\nimport { useWindowDimensions } from '@profico/react-utils';\nimport { ListChildComponentProps } from 'react-window';\n\nimport Article from 'components/Article';\n\nimport styles from './latest_articles.module.scss';\n\ninterface LatestArticlesProps {\n  articles: GetLatestArticlesArticle[];\n  onRefetch: () => void;\n  loading: boolean;\n  refetching?: boolean;\n}\ninterface FixedSizeListRenderFnProps extends ListChildComponentProps {\n  // eslint-disable-next-line react/no-unused-prop-types\n  data: GetLatestArticlesArticle[];\n}\n\nconst LIST_ITEM_HEIGHT = 108;\nconst SCROLL_THRESHOLD = LIST_ITEM_HEIGHT * 5;\n\nconst LatestArticles: React.FC<LatestArticlesProps> = ({\n  articles,\n  onRefetch,\n  loading,\n  refetching,\n}) => {\n  const hasCrossedThreshold = React.useRef<boolean>(false);\n\n  const { height } = useWindowDimensions();\n  const { LIST_HEIGHT, VISIBLE_LIST_ITEM_COUNT } = React.useMemo(() => {\n    const listHeight = height - 138;\n    const visibleListItemCount = Math.floor(listHeight / LIST_ITEM_HEIGHT);\n\n    return {\n      LIST_HEIGHT: listHeight,\n      VISIBLE_LIST_ITEM_COUNT: visibleListItemCount,\n    };\n  }, [height]);\n\n  const handleListScroll = async (\n    e: React.UIEvent<HTMLDivElement, UIEvent>\n  ) => {\n    const {\n      currentTarget: { scrollTop, scrollHeight },\n    } = e;\n\n    if (\n      scrollTop + LIST_ITEM_HEIGHT * VISIBLE_LIST_ITEM_COUNT >=\n        scrollHeight - SCROLL_THRESHOLD &&\n      !hasCrossedThreshold.current\n    ) {\n      hasCrossedThreshold.current = true;\n      await onRefetch();\n    }\n  };\n\n  React.useEffect(() => {\n    hasCrossedThreshold.current = false;\n  }, [articles.length]);\n\n  return (\n    <Flex className={styles.container} disableStyles>\n      <Text\n        weight=\"bold\"\n        align=\"left\"\n        color=\"muted\"\n        size=\"caption\"\n        transform=\"uppercase\"\n        className={styles.subtitle}\n      >\n        Najnovije\n      </Text>\n      {loading ? (\n        <Flex flexOut>\n          <LoadingSpinner size={24} />\n        </Flex>\n      ) : (\n        <Flex\n          flexDirection=\"column\"\n          onScroll={handleListScroll}\n          className={styles.listWrapper}\n          style={{ height: LIST_HEIGHT }}\n        >\n          <Flex\n            flexDirection=\"column\"\n            className={styles.list}\n            style={{ height: articles.length * LIST_ITEM_HEIGHT }}\n          >\n            {articles.map(article => (\n              <Article.Latest\n                key={article.id}\n                article={article}\n                className={styles.article}\n              />\n            ))}\n            {refetching && <LoadingSpinner size={24} />}\n          </Flex>\n        </Flex>\n      )}\n    </Flex>\n  );\n};\n\nexport default LatestArticles;\n","import Main from './Main';\n\nexport default Main;\n","import React, { useState } from 'react';\nimport Body from 'components/Layout/Body';\n\nimport { Flex } from '@profico/react-ui-components';\nimport {\n  GetWebConfigurationCategory,\n  GetFeaturedArticlesQueryResponse,\n  GetLatestArticlesQueryResponse,\n  GetLatestArticlesArticle,\n} from 'models';\nimport { useQuery, NetworkStatus } from '@apollo/client';\nimport {\n  GET_FEATURED_ARTICLES,\n  GetFeaturedArticlesQueryArgs,\n} from 'graphql/queries/get_featured_articles';\nimport {\n  GET_LATEST_ARTICLES,\n  GetLatestArticlesQueryArgs,\n} from 'graphql/queries/get_latest_articles';\n\nimport FeaturedArticles from './partials/FeaturedArticles';\nimport LatestArticles from './partials/LatestArticles';\n\nimport styles from './main.module.scss';\n\ninterface MainProps {\n  category: GetWebConfigurationCategory;\n  newsPortalIds: number[];\n}\n\nconst Main: React.FC<MainProps> = ({ category, newsPortalIds }) => {\n  const skipLatestArticles = React.useRef<number>(0);\n\n  const [latestArticles, setLatestArticles] = useState<\n    GetLatestArticlesArticle[]\n  >([]);\n\n  const categoryId = +category.id === -1 ? undefined : +category.id;\n\n  /*\n    In order to switch from REST to GQL or vice versa, we just need to change the query type.\n\n    E.g. `GET_FEATURED_ARTICLES.rest` to `GET_FEATURED_ARTICLES.gql` to switch from REST to GQL.\n  */\n  const faResult = useQuery<\n    { featuredArticles: GetFeaturedArticlesQueryResponse },\n    GetFeaturedArticlesQueryArgs\n  >(GET_FEATURED_ARTICLES.gql, {\n    variables: {\n      ...(categoryId ? { categoryIds: `${categoryId}` } : {}),\n      newsPortalIds: newsPortalIds.join(','),\n    },\n  });\n  const laResult = useQuery<\n    { latestArticles: GetLatestArticlesQueryResponse },\n    GetLatestArticlesQueryArgs\n  >(GET_LATEST_ARTICLES.rest, {\n    variables: {\n      ...(categoryId ? { categoryIds: `${categoryId}` } : {}),\n      take: 20,\n      skip: skipLatestArticles.current,\n      newsPortalIds: newsPortalIds.join(','),\n    },\n    onCompleted: result => {\n      setLatestArticles(prevArticles => [\n        ...prevArticles,\n        ...result.latestArticles.articles,\n      ]);\n    },\n  });\n\n  const handleRefetch = React.useCallback(async () => {\n    skipLatestArticles.current += 20;\n\n    await laResult.refetch({ skip: skipLatestArticles.current });\n  }, [laResult]);\n\n  React.useEffect(() => {\n    skipLatestArticles.current = 0;\n  }, [category.id]);\n\n  return (\n    <Body>\n      <Flex className={styles.container}>\n        <FeaturedArticles\n          articles={\n            faResult.data ? faResult.data.featuredArticles.articles : []\n          }\n          loading={faResult.loading}\n        />\n        <LatestArticles\n          articles={latestArticles}\n          onRefetch={handleRefetch}\n          loading={laResult.loading}\n          refetching={laResult.networkStatus === NetworkStatus.refetch}\n        />\n      </Flex>\n    </Body>\n  );\n};\n\nexport default Main;\n","import { gql } from '@apollo/client';\nimport { MultiApiQuery } from 'graphql/types';\n\nconst writeQuery = (useRest: boolean) => gql`\n  query GET_CONFIGURATION {\n    webConfiguration ${\n      useRest\n        ? '@rest(type: \"GetWebConfigurationQueryResponse\", path: \"/web-configuration\")'\n        : ''\n    } {\n      categories {\n        id\n        name\n        color\n        url\n      }\n      newsPortalIds\n    }\n  }\n`;\n\nexport const GET_CONFIGURATION: MultiApiQuery = {\n  gql: writeQuery(false),\n  rest: writeQuery(true),\n};\n","enum Environment {\n  LOCAL = 'local',\n  DEVELOPMENT = 'development',\n  PRODUCTION = 'production',\n  TEST = 'test',\n}\n\nexport { Environment };\n","/* eslint-disable sort-keys */\nimport React from 'react';\nimport Navbar from 'components/Navbar';\nimport Main from 'views/Main';\nimport Loader from 'components/Loader';\n\nimport { useParams } from 'react-router-dom';\nimport { useDocumentTitle } from '@profico/react-utils';\nimport {\n  GetWebConfigurationCategory,\n  GetWebConfigurationQueryResponse,\n} from 'models';\nimport { useQuery } from '@apollo/client';\nimport { GET_CONFIGURATION } from 'graphql/queries/get_configuration';\n\nconst filterCategories = (allCategories: GetWebConfigurationCategory[]) =>\n  allCategories.filter(({ name }) => name !== 'Lokalno');\n\nconst getCurrentCategory = (\n  path: string,\n  allRoutes: string[],\n  allCategories: GetWebConfigurationCategory[]\n): GetWebConfigurationCategory | undefined => {\n  const currentRouteIndex = allRoutes.findIndex(route => route === path);\n\n  if (currentRouteIndex !== -1) {\n    const category = allCategories[currentRouteIndex];\n\n    if (category) {\n      return category;\n    }\n  }\n\n  return undefined;\n};\n\nconst AppContainer: React.FC = () => {\n  const { path = '' } = useParams<{ path?: string }>();\n  const { loading: loadingConfiguration, data: config } = useQuery<{\n    webConfiguration: GetWebConfigurationQueryResponse;\n  }>(GET_CONFIGURATION.gql);\n\n  const {\n    allCategories,\n    allRoutes,\n    newsPortalIds,\n    currentCategory,\n  } = React.useMemo(() => {\n    const filteredCategories = config\n      ? filterCategories(config.webConfiguration.categories)\n      : [];\n    const routes = filteredCategories.map(({ url }) => url.replace('/', ''));\n    const category = getCurrentCategory(path, routes, filteredCategories);\n\n    return {\n      allCategories: filteredCategories,\n      allRoutes: routes,\n      newsPortalIds: config ? config.webConfiguration.newsPortalIds : [],\n      currentCategory: category,\n    };\n  }, [config, path]);\n\n  useDocumentTitle(() => {\n    const baseTitle = 'Espresso';\n\n    return currentCategory\n      ? `${currentCategory.name} - ${baseTitle}`\n      : baseTitle;\n  });\n\n  // const handleRouteChange = React.useCallback(\n  //   (newRoute: string) => {\n  //     setCurrentCategory(\n  //       getCurrentCategory(newRoute, allRoutes, allCategories)\n  //     );\n  //   },\n  //   [allCategories, allRoutes]\n  // );\n\n  if (loadingConfiguration) {\n    return <Loader />;\n  }\n\n  if (!currentCategory || allRoutes.length === 0 || !allRoutes.includes(path)) {\n    return <div>Page not found.</div>;\n  }\n\n  return (\n    <>\n      <Navbar\n        categories={allCategories}\n        routes={allRoutes}\n        onRouteChange={() => {}}\n      />\n      <Main newsPortalIds={newsPortalIds} category={currentCategory} />\n    </>\n  );\n};\n\nexport default AppContainer;\n","import React from 'react';\nimport AppContainer from 'containers/AppContainer';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\nconst AppRouter: React.FC = () => (\n  <Router>\n    <Switch>\n      <Route path=\"/home\" exact component={() => <Redirect to=\"/\" />} />\n      <Route path=\"/:path?\" exact component={AppContainer} />\n      <Route component={() => <div>Page not found.</div>} />\n    </Switch>\n  </Router>\n);\n\nexport default AppRouter;\n","import { Environment } from './environment';\n\nclass Configuration {\n  /**\n   * Environment\n   */\n  public readonly environment: Environment;\n\n  /**\n   * Configuration object\n   */\n  public readonly settings: Record<string, unknown>;\n\n  /**\n   * Initializes new instance of configuration objects\n   * and sets its properties with priority in order from environment variables,\n   * settings.{environment}.json file or settings.json file\n   */\n  constructor(\n    appSettings: Record<string, unknown>,\n    appSettingsEnvironment: Record<string, unknown>,\n    environment: Environment\n  ) {\n    this.environment = environment;\n    this.settings = {\n      ...appSettings,\n      ...appSettingsEnvironment,\n    };\n\n    // if (Object.keys(this.settings).length === 0) {\n    //   Configuration.throwErrorExpression('Missing configuration.');\n    // }\n\n    Object.keys(this.settings).forEach(key => {\n      Object.defineProperty(this, key, {\n        value: appSettingsEnvironment[key] ?? appSettings[key],\n      });\n    });\n  }\n\n  /**\n   * Gets property from configuration object\n   * @param property name of property on configuration object\n   */\n  public getProperty<T = unknown>(property: 'serverUrl' | 'headers'): T {\n    if (!Object.prototype.hasOwnProperty.call(this.settings, property)) {\n      throw new Error('Missing key.');\n    }\n\n    return this.settings[property] as T;\n  }\n}\nexport { Configuration };\n","/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-var-requires */\nimport { Environment } from './environment';\nimport { Configuration } from './configuration';\n\nimport appSettings from './Settings/settings.json';\n\nclass ConfigurationBuilder {\n  private static configuration: Configuration;\n\n  /**\n   * This methods ensures there is only one instance of configuration object\n   */\n  public static getConfiguration(): Configuration {\n    if (!this.configuration) {\n      this.buildConfiguration();\n    }\n\n    return this.configuration;\n  }\n\n  /**\n   * Builds new instance of configuration from environment variables,\n   * appsettings.json file and appsettings.{environment}.json file\n   * where environment is value of REACT_APP_ENVIRONMENT environment variable\n   */\n  public static buildConfiguration(): void {\n    const environment = process.env.REACT_APP_ENVIRONMENT as Environment;\n    const appSettingsEnvironmentFileName = this.getAppSettingsFileName(\n      environment\n    );\n    const appSettingsEnvironment = require(`./Settings/${appSettingsEnvironmentFileName}`);\n    const config = new Configuration(\n      appSettings,\n      appSettingsEnvironment,\n      environment\n    );\n\n    this.configuration = config;\n  }\n\n  private static getAppSettingsFileName(environment: Environment): string {\n    if (Object.values(Environment).includes(environment)) {\n      return `settings.${environment}.json`;\n    }\n\n    throw new Error('Undefined Environment!');\n  }\n}\n\nexport { ConfigurationBuilder };\n","import { RestLink } from 'apollo-link-rest';\nimport {\n  HttpLink,\n  ApolloClient,\n  InMemoryCache,\n  ApolloLink,\n} from '@apollo/client';\nimport { GetLatestArticlesQueryResponse } from 'models';\n\nimport { ConfigurationBuilder } from './configuration.builder';\n\nconst config = ConfigurationBuilder.getConfiguration();\nconst headers = config.getProperty<Record<string, string>>('headers');\nconst apiBaseUrl = config.getProperty<string>('serverUrl');\n\ninterface LatestArticlesResponse {\n  latestArticles: GetLatestArticlesQueryResponse;\n}\n\nconst restLink = new RestLink({\n  headers,\n  credentials: 'omit',\n  uri: `${apiBaseUrl}/api`,\n});\nconst httpLink = new HttpLink({\n  uri: `${apiBaseUrl}/graphql`,\n  headers,\n  credentials: 'omit',\n});\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  cache,\n  headers,\n  link: ApolloLink.from([restLink, httpLink]),\n});\n\nexport default client;\n","export const Palette = {\n  black: '#000000',\n\n  gray200: '#F7F7F7',\n  gray300: '#EEEEEE',\n  gray400: '#D8D8D8',\n  gray800: '#1D1D1B',\n\n  primary: '#D7545A',\n\n  white: '#FFFFFF',\n};\n","import React from 'react';\nimport AppRouter from 'routers/AppRouter';\nimport moment from 'moment';\nimport apolloClient from 'configuration/apollo-client';\nimport { ApolloProvider } from '@apollo/client';\nimport { TextConfigProvider } from '@profico/react-ui-components';\nimport { Palette } from 'styles/Palette';\nimport { useStringHelpers } from '@profico/react-utils';\n\nmoment.locale('hr');\n\nconst App: React.FC = () => {\n  const { hexToRgba } = useStringHelpers();\n\n  return (\n    <ApolloProvider client={apolloClient}>\n      <TextConfigProvider\n        config={{\n          colors: {\n            primary: Palette.black,\n            secondary: hexToRgba(Palette.gray800, 0.4),\n            white: '#FFFFFF',\n            black: '#000000',\n            muted: hexToRgba(Palette.gray800, 0.4),\n            error: Palette.primary,\n            success: Palette.white,\n          },\n        }}\n      >\n        <AppRouter />\n      </TextConfigProvider>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\nimport { ConfigurationBuilder } from 'configuration';\nimport Axios from 'axios';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/main.scss';\n\nconst config = ConfigurationBuilder.getConfiguration();\nAxios.defaults.baseURL = config.getProperty('serverUrl');\nAxios.defaults.headers = config.getProperty('headers');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"navbar_container__1bbBA\",\"logoLink\":\"navbar_logoLink__33f5T\",\"logo\":\"navbar_logo__1nWOE\",\"items\":\"navbar_items__1vLL2\",\"navItem\":\"navbar_navItem__1bmye\",\"navItem__active\":\"navbar_navItem__active__PP6FB\",\"navItem__activeText\":\"navbar_navItem__activeText__1YAiD\",\"navItemText\":\"navbar_navItemText__2qY7z\",\"arrowsWrapper\":\"navbar_arrowsWrapper__L637-\",\"arrowBtn\":\"navbar_arrowBtn__3UPIA\",\"arrowLeft\":\"navbar_arrowLeft__20nKw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingSpinner\":\"loader_loadingSpinner__vMYOn\",\"rotator\":\"loader_rotator__35mpy\",\"circle\":\"loader_circle__1l4bC\",\"dash\":\"loader_dash__1g9v0\",\"loader\":\"loader_loader__2sbTU\",\"text\":\"loader_text__TUPgW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"latest_articles_container__1y2vf\",\"subtitle\":\"latest_articles_subtitle__1SBPw\",\"listWrapper\":\"latest_articles_listWrapper__1nDdj\",\"article\":\"latest_articles_article__3YABa\",\"virtualizedList\":\"latest_articles_virtualizedList__3rigk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"featured_articles_container__1cBop\",\"subtitle\":\"featured_articles_subtitle__2cy3m\",\"mainArticle\":\"featured_articles_mainArticle__3oDl5\",\"list\":\"featured_articles_list__w9jar\"};"],"sourceRoot":""}