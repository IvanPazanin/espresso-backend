<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <AnalysisLevel>preview</AnalysisLevel>
    <Nullable>enable</Nullable>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    
    <!-- <SpaRoot>ClientApp\</SpaRoot> -->
    <!-- <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes> -->
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="9.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Versioning" Version="4.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR" Version="1.1.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="5.6.3" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.0" />
    <PackageReference Include="GraphQL" Version="3.1.5" />
    <PackageReference Include="GraphQL.Server.Ui.Playground" Version="4.3.1" />
    <PackageReference Include="GraphQL.SystemTextJson" Version="3.1.5" />
    <PackageReference Include="RabbitMQ.Client" Version="6.2.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Espresso.WebApi.Application\Espresso.WebApi.Application.csproj" />
    <ProjectReference Include="..\Espresso.Common\Espresso.Common.csproj" />
    <ProjectReference Include="..\Espresso.Persistence\Espresso.Persistence.csproj" />
  </ItemGroup>

    <!-- Don't publish the SPA source files, but do show them in the project files list -->
  <!-- <ItemGroup>
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup> -->

<!-- <Target Name="PostBuild" AfterTargets="PostBuildEvent">
  <Exec Command="if not exist $(OutDir)..\..\..\.\build  mkdir $(OutDir)..\..\..\..\build" />
  <Exec Command="copy $(OutDir)$(TargetName).dll $(OutDir)..\..\..\..\build\$(TargetName).dll /Y" />
  <Exec Command="copy $(OutDir)$(TargetName).pdb $(OutDir)..\..\..\..\build\$(TargetName).pdb /Y" />
</Target> -->

<!-- <Target Name="PostBuild" AfterTargets="PostBuildEvent">
  <Exec Command="echo $(OutDir)" />
  <Exec Command="ls ../Espresso.ClientApp/build" />
  <Exec Command="mkdir -p $(OutDir)Espresso.ClientApp" />
  <Exec Command="cp -R ../Espresso.ClientApp/build $(OutDir)Espresso.ClientApp/build" />
  <Exec Command="ls $(OutDir)" />
  <Exec Command="ls $(OutDir)Espresso.ClientApp" />
  <Exec Command="ls $(OutDir)Espresso.ClientApp/build" />
</Target> -->

<ItemGroup>
      <Content Update="AppSettings/DatabaseSettings/database-settings.development.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="AppSettings/DatabaseSettings/database-settings.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="AppSettings/DatabaseSettings/database-settings.local-production.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="AppSettings/DatabaseSettings/database-settings.local.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="AppSettings/DatabaseSettings/database-settings.production.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>

    <Content Update="AppSettings/GeneralSettings/app-settings.development.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="AppSettings/GeneralSettings/app-settings.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="AppSettings/GeneralSettings/app-settings.local.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="AppSettings/GeneralSettings/app-settings.production.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>

    <Content Update="AppSettings/LoggingSettings/logging-settings.development.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="AppSettings/LoggingSettings/logging-settings.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="AppSettings/LoggingSettings/logging-settings.local.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="AppSettings/LoggingSettings/logging-settings.production.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>    
  </ItemGroup>
  
</Project>
